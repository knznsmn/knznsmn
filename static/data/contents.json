[
  {
    "title": "Markdown Features",
    "url": "/docs/graphic-design/after-effects",
    "text": "Markdown Features"
  },
  {
    "title": "Converting Assets",
    "url": "/docs/graphic-design/converting-assets",
    "text": "Converting Assets"
  },
  {
    "title": "Design Principles",
    "url": "/docs/graphic-design/design",
    "text": "Design Principles"
  },
  {
    "title": "Illustrator",
    "url": "/docs/graphic-design/illustrator",
    "text": "Illustrator"
  },
  {
    "title": "Photoshop",
    "url": "/docs/graphic-design/photoshop",
    "text": "Photoshop"
  },
  {
    "title": "Resources",
    "url": "/docs/graphic-design/resources",
    "text": "Resources"
  },
  {
    "title": "Notes",
    "url": "/docs/index",
    "text": "Notes"
  },
  {
    "title": "CSS Resets",
    "url": "/docs/programming/css-reset",
    "text": "CSS Resets css / 1. Use a moreintuitive boxsizing model / , ::before, ::after {   boxsizing: borderbox; } / 2. Remove default margin /  {   margin: 0; } body {   / 3. Add accessible lineheight /   lineheight: 1.5;   / 4. Improve text rendering /   webkitfontsmoothing: antialiased; } / 5. Improve media defaults / img, picture, video, canvas, svg {   display: block;   maxwidth: 100%; } / 6. Inherit fonts for form controls / input, button, textarea, select {   font: inherit; } / 7. Avoid text overflows / p, h1, h2, h3, h4, h5, h6 {   overflowwrap: breakword; } / 8. Improve line wrapping / p {   textwrap: pretty; } h1, h2, h3, h4, h5, h6 {   textwrap: balance; } /   9. Create a root stacking context / root, next {   isolation: isolate; } I'm no CSS boss. This code was copied from Josh W Comeau(https://www.joshwcomeau.com/css/customcssreset/)."
  },
  {
    "title": "Setting Up Git",
    "url": "/docs/programming/git",
    "text": "Setting Up Git  Git Git is a distributed version control system^1.  Setting Up git This^2 .  Update the System bash sudo apt update sudo apt upgrade  Set up a Git username: bash git config global user.name \"\" To confirm that you have set the username correctly, bash git config global user.name The enclosing quotations marks are empty intentionally. You should type your username in between.  Set an email address: bash git config global user.email \"\" To confirm that you have set the email address correctly, bash git config global user.email If you opted to use the private GitHub email address, you can use a GitHubprovided noreply email address^3. Then use this command instead, bash git config global user.email \"id+username@users.noreply.github.com\"  Configuring git  To change the default branch for git, bash git config global init.defaultBranch main  To enable colorful output with git, bash git config global color.ui auto  To set the default branch reconciliation behavior to merging, bash git config global pull.rebase false ^1: Git Documentation. (n.d.) About Version Control(https://gitscm.com/book/en/v2/GettingStartedAboutVersionControl) ^2: The Odin Project. (n.d.) Setting Up Git(https://www.theodinproject.com/lessons/foundationssettingupgit) ^3: Github Inc. (2024). Setting your commit email address(https://docs.github.com/en/accountandprofile/settingupandmanagingyourpersonalaccountongithub/managingemailpreferences/settingyourcommitemailaddress)"
  },
  {
    "title": "Setting Up GitHub",
    "url": "/docs/programming/github",
    "text": "Setting Up GitHub"
  },
  {
    "title": "HTML In Depth",
    "url": "/docs/programming/html-inputs",
    "text": "HTML In Depth  Semantic and Meta Tags  User Inputs and Forms  Input types  Button This displays a clickable button and it’s mostly used in HTML forms to activate a script when clicked. <input type=\"button\" value=\"Click me\" onclick=\"msg()\" / html <button onclick=\"alert('Are you sure you want to continue?')\"     <img src=\"https://yourserver.com/buttonimg.jpg\" alt=\"Submit the form\" height=\"64\" width=\"64\" </button  Checkbox Defines a check box allowing single values to be selected or deselected. They are used to let a user select one or more options of a limited number of choices. html <input type=\"checkbox\" id=\"dog\" name=\"dog\" value=\"Dog\" <label for=\"dog\"I like dogs</label <input type=\"checkbox\" id=\"cat\" name=\"cat\" value=\"Cat\" <label for=\"cat\"I like cats</label  Radio Displays a radio button, allowing only a single value to be selected out of multiple choices. They are normally presented in radio groups, which is a collection of radio buttons describing a set of related options that share the same \"name\" attribute. html <input type=\"radio\" id=\"light\" name=\"theme\" value=\"Light\" <label for=\"light\"Light</label <input type=\"radio\" id=\"dark\" name=\"theme\" value=\"Dark\" <label for=\"dark\"Dark</label  Submit Displays a submit button for submitting all values from an HTML form to a formhandler, typically a server. The formhandler is specified in the form’s \"action\" attribute: html <form action=\"myserver.com\" method=\"POST\"     <input type=\"submit\" value=\"Submit\" / </form  Text Defines a basic singleline text field that a user can enter text into. html <label for=\"fname\"First name:</label <input type=\"text\" id=\"fname\" name=\"fname\"  Password Defines a singleline text field whose value is obscured, suited for sensitive information like passwords. html <label for=\"pwd\"Password:</label <input type=\"password\" id=\"pwd\" name=\"pwd\"  Date Displays a control for entering a date with no time (year, month and day). html <label for=\"dob\"Date of birth:</label <input type=\"date\" id=\"dob\" name=\"date of birth\"  Datetimelocal Defines a control for entering a date and time, including the year, month and day, as well as the time in hours and minutes. html <label for=\"birthdaytime\"Birthday (date and time):</label <input type=\"datetimelocal\" id=\"birthdaytime\" name=\"birthdaytime\"  Email Defines a field for an email address. It’s similar to a plain text input, with the addition that it validates automatically when submitted to the server. html <label for=\"email\"Enter your email:</label <input type=\"email\" id=\"email\" name=\"email\"  File Displays a control that lets the user select and upload a file from their computer. To define the types of files permissible you can use the \"accept\" attribute. Also, to enable multiple files to be selected, add the \"multiple\" attribute. html <label for=\"myfile\"Select a file:</label <input type=\"file\" id=\"myfile\" name=\"myfile\"  Hidden Defines a control that is not displayed but whose value is still submitted to the server. html <input type=\"hidden\" id=\"custId\" name=\"custId\" value=\"3487\"  Image Defines an image as a graphical submit button. You should use the “src” attribute to point to the location of your image file. html <input type=\"image\"src=\"submitimg.png\" alt=\"Submit\" width=\"48\" height=\"48\"  Number Defines a control for entering a number. You can use attributes to specify restrictions, such as min and max values allowed, number intervals or a default value. html <input type=\"number\" id=\"quantity\" name=\"quantity\" min=\"1\" max=\"5\"  Range Displays a range widget for specifying a number between two values. The precise value, however, is not considered important. This is typically represented using a slider or dial control. To define the range of acceptable values, use the “min” and “max” properties. html <label for=\"volume\"Volume:</label <input type=\"range\" id=\"volume\" name=\"volume\" min=\"0\" max=\"10\"  Reset Displays a button that resets the contents of the form to their default values. html <input type=\"reset\"  Search Defines a text field for entering a search query. These are functionally identical to text inputs, but may be styled differently depending on the browser. html <label for=\"gsearch\"Search in Google:</label <input type=\"search\" id=\"gsearch\" name=\"gsearch\"  Time Displays a control for entering a time value in hours and minutes, with no time zone. html <label for=\"appt\"Select a time:</label <input type=\"time\" id=\"appt\" name=\"appt\"  Tel Defines a control for entering a telephone number. Browsers that do not support “tel” fall back to standard text input. You can optionally use the \"pattern\" field to perform validation. html <label for=\"phone\"Enter your phone number:</label <input type=\"tel\" id=\"phone\" name=\"phone\" pattern=\"+{1}09{11,14}\"  Url Displays a field for entering a text URL. It works similar to a text input, but performs automatic validation before being submitted to the server. html <label for=\"homepage\"Add your homepage:</label <input type=\"url\" id=\"homepage\" name=\"homepage\"  Week Defines a control for entering a date consisting of a weekyear number and a year, with no time zone. Keep in mind that this is a newer type that is not supported by all the browsers. html <label for=\"week\"Select a week:</label <input type=\"week\" id=\"week\" name=\"week\"  Month Displays a control for entering a month and year, with no time zone. Keep in mind that this is a newer type that is not supported by all the browsers. html <label for=\"bdaymonth\"Birthday (month and year):</label <input type=\"month\" id=\"bdaymonth\" name=\"bdaymonth\" min=\"193001\" value=\"200001\"  Creating a form html <form     <div         <label for=\"userfirstname\"First Name</label<br         <input type=\"text\" id=\"userfirstname\" name=\"userfirstname\"     </div     <div         <label for=\"userlastname\"Last Name</label<br         <input type=\"text\" id=\"userlastname\" name=\"userlastname\"     </div     <div         <label for=\"useremail\"</labelEmail Address<br         <input type=\"email\" id=\"useremail\" name=\"useremail\"     </div     <div         <label for=\"userpassword\"Password</label<br         <input type=\"password\" id=\"userpassword\" name=\"userpassword\"     </div     <div         <label for=\"userconfirmpassword\"Confirm Password</label<br         <input type=\"password\" id=\"userconfirmpassword\" name=\"userconfirmpassword\"     </div     <button type=\"submit\"Sign Up</button </form  Clientside Validation  Required attribute html <form method=\"post\"     <label for=\"username\"Username:</label<br     <input type=\"text\" id=\"username\" name=\"username\" required<br     <label for=\"password\"Password:</label<br     <input type=\"text\" id=\"password\" name=\"password\" required<br     <input type=\"submit\" value=\"Submit\" </form  Length of data html <form method=\"post\"     <label for=\"username\"Username:</label<br     <input type=\"text\" id=\"username\" name=\"username\" required minlength=\"6\" maxlength=\"12\"<br     <label for=\"password\"Password:</label<br     <input type=\"text\" id=\"password\" name=\"password\" required minlength=\"6\" maxlength=\"12<br     <input type=\"submit\" value=\"Submit\" </form  Catching invalid input html <style     input:focus:invalid {         border: 2px solid red;     } </style  Radio Buttons html <h1Book a Table</h1 <form method=\"post\"     <fieldset id=\"size\"         <label             <input type=\"radio\" value=\"2\" name=\"size\" 2person table         </label         <label             <input type=\"radio\" value=\"4\" name=\"size\" checked 4person table         </label         <label             <input type=\"radio\" value=\"6\" name=\"size\" 6person table         </label     </fieldset     <fieldset id=\"location\"         <label             <input type=\"radio\" value=\"indoors\" name=\"location\" checked Indoors         </label         <label             <input type=\"radio\" value=\"outdoors\" name=\"location\" Outdoors         </label     </fieldset     <button type=\"submit\"Book table</button </form  Interactive form elements Required Denotes a mandatory input that the user can’t leave empty. It can be used with any input type, like password, radio, text and so on. <input type=\"text\" id=\"firstName\" name=\"firstName\" required  Maxlength Specifies the maximum length of a text input, in other words, the maximum number of characters that can be entered for a specific field. If provided, it will prevent the user from entering more characters than the limit. <input type=\"text\" id=\"description\" name=\"description\" maxlength=\"50\"  Minlength Specifies the minimum length of a text input. If set, the input will not accept fewer characters than those specified. <input type=\"password\" id=\"password\" name=\"password\" minlength=\"8\"  Min and max attributes Determine the minimum and maximum values allowed for an input field. They are usually applied to numerical text inputs, range inputs or dates. <input type=\"number\" id=\"quantity\" name=\"quantity\" min=\"1\" max=\"10\"  <input type=\"range\" id=\"volume\" name=\"volume\" min=\"1\" max=\"100\"  Multiple Indicates that the user can enter more than one value in a single input field. This attribute can only be used for email and file input types. <input type=\"file\" id=\"gallery\" name=\"gallery\" multiple  Pattern Defines a particular pattern that an input field value has to fulfill to be considered valid. This attribute expects a regular expression to specify the pattern. It works with text, date, search, URL, tel, email and password input types. For example, you can restrict phone numbers to be only from the UK. <input type=\"tel\" id=\"phone\" name=\"phone\" pattern=”^(?:0|\\+?44)(?:\\d\\s?){9,10}$”    Using interactive form elements html <h1Book a Table</h1 <form method=\"post\"     <div         <label for=\"bookingdate\"Booking Date</label         <input type=\"date\" name=\"bookingdate\" id=\"bookingdate\"     </div     <div         <label for=\"bookingpeople\"Number of People</label         <input type=\"range\" name=\"bookingpeople\" id=\"bookingpeople\" min=\"1\" max=\"10\" value=\"4\" oninput=\"this.nextElementSibling.value = this.value\"         <output4</output     </div     <div         <label for=\"bookinglocation\"</label         <input type=\"text\" id=\"bookinglocation\" name=\"bookinglocation\" list=\"locations\"         <datalist id=\"locations\"             <option value=\"Downtown\"</option             <option value=\"Uptown\"</option         </datalist </div     <button type=\"submit\"Book Table</button     input: </form  Form Submission GET Method html <form method=\"get\"     <label for=\"username\"Username:</label<br     <input type=\"text\" id=\"username\" name=\"username\" value=\"admin\"<br     <label for=\"password\"Password:</label<br     <input type=\"text\" id=\"password\" name=\"password\" value=\"password\"<br     <input type=\"submit\" value=\"Log In\" </form POST method When the form is submitted using the post method, the form data is inserted into the content of the HTTP request. When the submit button is pressed, it will send an HTTP post request with the data contained in the body of the request. The HTTP post method is more secure than the HTTP GET method. The HTTP POST method is more secure than the HTTP GET method. When a form is submitted using the Post method, the form data is inserted into the content of the HTTP request instead of appended at the end of the URL as is done with the GET method.  This makes it more difficult for a hacker to capture the data that is submitted through the form.  Submitting a form  Action and Method The action attribute specifies the URL where the form data will be sent. The method attribute specifies the HTTP method (GET or POST) to be used when submitting the form data. The action attribute specifies to which web address the form must be sent. This address is location of serverside code that will process the request. html <form action=\"/login\"  </form  It is important to note that action can be a full URL address such as https://meta.com, an absolute path such as /login, or a relative path such as login. The absolute path, which starts with a forward slash, will use the base address of the current website, such as https://meta.com and combine it with the absolute path. For example, if /login is the absolute path, the form will be submitted to https://meta.com/login. If the address is https://meta.com/companyinfo/ and /login is the absolute path, the submission address will still be https://meta.com/login. Similarly, a relative path will combine the current web address with a relative path. For example, if the web browser is currently on the web page https://meta.com/companyinfo/, and the relative path is set to login, the form will be submitted to https://meta.com/companyinfo/login. The form will default to the HTTP GET method when the method attribute is not provided.   HTML Form Elements <label Defines a label for an element. It has an attribute \"for\", the value of which should be equal to the id attribute of the element it is associated with. Note how in the example above, the <label is associated with the <input using its id value. <select Defines a dropdown list of options presented to the user. It has a couple of attributes:  Form, the id of the form in which the dropdown appears   Name specifies the name of the control   Multiple Boolean attribute, when specified, indicates if a user can select multiple options out of the list   Required indicates if the user is required to select an option before submitting a form   Size mentions the number of visible options in a dropdown list  The options in a dropdown list are defined using the <option element inside <select. Note the example in the <option description below. <textarea Defines a multiline input field, typically to allow the user to input longer textual data. The common attributes for this element include:  cols defines the width of the text area, the default value is 20  form the form element the text area is associated with  maxlength when specified, limits the maximum number of characters that can be entered in the text area  minlength the minimum number of characters that the user should enter  readonly once set, the user cannot modify the contents  rows defines the number of visible text lines for the text area  html <textarea name=\"response\" rows=\"10\" cols=\"30\" maxlength=”200” </textarea  <button Defines a clickable button. The onclick attribute defines the behavior when the button is clicked by the user. For example, in the code below, an alert message is shown to the user. html <button type=\"button\" onclick=\"alert('You just clicked')\"Click Me  </button  <fieldset Used to group related input elements in a form. For instance, elements related to the user’s personal information and educational qualification can be grouped separately in two fieldsets. <legend  Defines a caption for the <fieldset element. html <fieldset    <legendPersonal Info</legend    <label for=\"fname\"First name:</label<br    <input type=\"text\" id=\"fname\" name=\"fname\" value=\"John\"<br    <label for=\"lname\"Last name:</label<br    <input type=\"text\" id=\"lname\" name=\"lname\" value=\"Doe\"<br  </fieldset  <fieldset    <legendQualification</legend    <label for=\"pdegree\"Primary degree:</label<br    <input type=\"text\" id=\"pdegree\" name=\"degree\" value=\"Masters\"<br    <label for=\"fos\"Last name:</label<br    <input type=\"text\" id=\"fos\" name=\"field\" value=\"Psychology\"<br  </fieldset  <datalist Specifies a list of predefined options for an input element. It differs from <select since the user can still provide textual or numeric input other than the listed options.    html <form action=\"/myactionpage\"    <label for=\"flowers\"Favourite flower:</label<br    <input list=\"flowers\" name=\"flowers\"    <datalist id=\"flowers\"      <option value=\"Rose\"      <option value=\"Lily\"      <option value=\"Tulip\"      <option value=\"Daffodil\"      <option value=\"Orchid\"    </datalist    ...  </form <output Represents the result of a calculation (typically the output of a script) or the outcome of the user action. <option Defines an option for the dropdown list. The following code example demonstrates how a simple list can be defined, with the rendered view below the code block. html <label for=\"course\"Choose a course:</label<br  <select id=\"course\" name=\"courselist\"    <option value=\"html\"HTML Introduction</option    <option value=\"css\"Styling with CSS</option    <option value=\"js\"JavaScript</option    <option value=\"react\"React Basics</option  </select  By default, the first item in the dropdown list is selected. To define a preselected option, add the selected attribute to the option. <optgroup Defines a group of related options in a dropdown list. Its attribute label names the group.   Media Elements  Video and audio  Source and type attributes Video html <video width=\"640\" height=\"420\" controls     <source src=\"video.mp4\" type=\"video/mp4\"     <source src=\"video.ogg\" type=\"video/ogg\" </video Audio html <audio loop controls     <source src=\"music.mp3\" type=\"audio/mpeg\"     <source src=\"music.ogg\" type=\"audio/ogg\" </audio Images html <figure     <img src=\"photo.png\" width=\"320\" alt=\"My Profile Photo\"     <figcaptionA photo of myself on a beach in 2015</figcaption  </figure The web browser only supports specific file types. These file types are:  .APNG – Animated Portable Network Graphics  .AVIF – AV1 Image Format  .GIF – Graphics Interchange Format  .JPEG / .JPG – Joint Photographic Expert Group image format  .PNG – Portable Network Graphics  .SVG – Scalable Vector Graphics  .WEBP – Web Picture Format   iFrames The <iframe is the inline frame element that embeds an HTML page into another page. Apart from the global attributes, which can be a part of the iframe, major elementspecific attributes are listed below. allow It specifies what features or permissions are available to the frame, for instance, access to the microphone, camera, other APIs and so on. For example:  allow=\"fullscreen” the fullscreen mode can be activated  allow=“geolocation” lets you access the user’s location To specify more than one feature, a semicolonseparator should be used between features. For example, the following would allow using the camera and the microphone: <iframe src=\"https://example.com/…\" allow=\"camera; microphone\" </iframe name The name for the <iframe. For example: <iframe name = \"My Frame\" width=\"400\" height=\"300\"</iframe height It specifies the height of the frame. The default value is 150, in terms of CSS pixels. width Specifies the width of the frame, in terms of CSS pixels. The default value is 300 pixels. referrerpolicy A referrer is the HTTP header that lets the page know who is loading it. This attribute indicates which referrer information to send when loading the frame resource. The common values are:  noreferrer The referrer header will not be sent.  origin The referrer will be limited to the origin of the referring page  strictorigin The origin of the document is sent as the referrer only when using the same protocol security level (HTTPS to HTTPS)  sandbox To enforce greater security, a sandbox applies extra restrictions to the content in the <iframe. To lift particular restrictions, an attribute value (permission token) is used. The common permission tokens are listed below:  allowdownloads Allows the user to download an item  allowforms Allows the user to submit forms  allowmodals The resource can open modal windows  alloworientationlock Lets the resource lock the screen orientation  allowpopups Allows popups to open  allowpresentation Allows a presentation session to start  allowscripts Lets the resource run scripts without creating popup windows When the value of this attribute is empty, all restrictions are applied. To apply more than one permission, use a spaceseparated list. src The URL of the page to embed in the <iframe. Using the value about:blank would embed an empty page. srcdoc Let's you specify the inline HTML to embed in the <iframe. When defined, this attribute would override the src attribute.   loading This attribute let's you specify if the iframe should be loaded immediately when the web page loads (eager) or loaded when iframe is displayed in the browser (lazy). This allows you to defer loading iframe content if it is further down your web page and outside of the display area when the page is initially loaded. title This attribute let's you add a description to the iframe for accessibility purposes. The value of this attribute should accurately describe the iframe's content.  Canvas The <canvas element is used to draw graphics, on the fly, via scripting (usually JavaScript). The <canvas element is only a container for graphics. You must use a script to actually draw the graphics. Additional resources https://html.com/media/ https://studio.support.brightcove.com/publish/choosingcorrectembedcode.html https://developer.mozilla.org/enUS/docs/Learn/HTML/Multimediaandembedding/ImagesinHTML https://www.educba.com/iframesinhtml/ https://www.tutorialrepublic.com/htmltutorial/html5canvas.php https://html.spec.whatwg.org/multipage/media.html"
  },
  {
    "title": "",
    "url": "/docs/programming/javascript/Untitled",
    "text": ""
  },
  {
    "title": "Killing A Running Server",
    "url": "/docs/programming/killing-a-server",
    "text": "Killing A Running Server To kill the running local server: bash sudo lsof wni tcp:4000 This command outputs some text, including the process' PID. bash sudo kill 9 PID"
  },
  {
    "title": "Resetting A Repository",
    "url": "/docs/programming/resetting-repository",
    "text": "Resetting A Repository Steps to reset a GitHub repository: 1. if (repository), clone the repository: bash git clone <remote repository cd <repository :::info To check the current remote url of the repository: bash git remote v ::: 2. Remove all git history: bash rm rf .git 3. Reinitialize git: bash git init 4. Reconnect the repository to GitHub: bash git remote add origin <remote repository url  5. Create a new commit: bash touch README.md  Add at least one file to commit git commit m \"Reset repository\" 6. Force push to GitHub: bash git push force origin main Replace main with the branch name if it's different. :::caution  This completely erases all previous commits and files.  GitHub will not retain old versions after the force push. :::"
  },
  {
    "title": "Scripting",
    "url": "/docs/programming/scripting",
    "text": "Scripting"
  },
  {
    "title": "Setting Up Linux For Development",
    "url": "/docs/programming/unix",
    "text": "Setting Up Linux For Development I ~~like~~ hate Ubuntu(https://ubuntubudgie.org/downloads) as the best Linux distribution. Download (hands down) the best operating system ever(https://www.linuxmint.com/downloadlmde.php) here. LMDE is Debian with Cinammon desktop on top. Ubuntu have a habit of undermining my sudo by sneakily installing an ugly package of Firefox. Au revoir Ubuntu. Salut, Debian  Update the system: bash sudo apt update && sudo apt upgrade y  Install tools:  git  gcc  vim  openssh Always run apt update first before installing any software; otherwise, your Linux machine might become Windows, and you'd regret it. Just kidding. In fact, Windows is a great OS, not only for games. Visual Studio is an excellent IDE for developing a variety of applications for all platforms, and it can only be installed on a Windows device, if I'm not mistaken. bash sudo apt update && sudo apt upgrade y Then install the tools: bash sudo apt install git gcc vim openssh apparently is already installed. If not, bash sudo apt install openssh  Configure the tools:  git You can change the name that is associated with your Git commits using the git config command^1. This guide assumes that you already have a Github account set up and ready. 1. Set up a Git username: bash git config global user.name \"\" To confirm that you have set the username correctly, bash git config global user.name The enclosing quotations marks are empty intentionally. You should type your username in between. 2. Set an email address: bash git config global user.email \"\" To confirm that you have set the email address correctly, bash git config global user.email  ssh 3. Next is to set up and configure ssh to be able to connect and push your codes to your Github repositories. This is also true when using Sublime Merge. Generating ssh keys on Working Copy is easier. bash sshkeygen t ed25519 C \"\" 4. Copy the contents in the generated .pub to your Github's SSH and GPG keys tab or section: bash cat ~/.ssh/ided25519.pub  vim Much of the changes I want to make for my toolbox could most probably be automated. I should learn how to do that someday. For now, I'll just make a repository for all my config files so I can easily find them all in one place^2. 1. Create a .gitignore containing only . 2. Initialize home and set up git repository. bash cd ~ git init git remote add origin git@github.com:knznsmn/dtfls.git git fetch git checkout f main :::note Found this page(https://dotfiles.github.io/). Should read this later. ::: Adding files/directories: bash git add f <filename  Install ohmybash Make bash a lot prettier for eyescream experience using ohmybash. bash bash c \"$(curl fsSL https://raw.githubusercontent.com/ohmybash/ohmybash/master/tools/install.sh)\"  Download other tools:  Obsidian  A nice notetaking app. I add and edit contents of this website with Obsidian.  Sublime Text  A text editor for text editing done right, they said. Please don't shoot the messenger.  Sublime Merge  An actually decent git GUI client for editing text.  Zotero  It is a free tool to help organize, annotate, cite, and share research.  Encountered Problems and Tried Fixes  Installing Nvidia driver To install the official NVIDIA driver instead of the default graphics driver \"nouveau\". bash sudo apt install nvidiadriver  Disable grub delay Modify the grub file: bash sudo vim /etc/default/grub  Broken libdvdpkg I don't understand most of the errors (and even the fixes) of Linux system. But this fix works: bash sudo dpkgreconfigure libdvdpkg  Fonts  fonts install fonts at ~/.local/share/fonts ^1: Github Inc. (2024). Generating a new SSH key and adding it to the sshagent(https://docs.github.com/en/authentication/connectingtogithubwithssh/generatinganewsshkeyandaddingittothesshagent?platform=linux) ^2: deVault, D. (2019, Dec 30). Managing my dotfiles as a git repository(https://drewdevault.com/2019/12/30/dotfiles.html))"
  },
  {
    "title": "Vim",
    "url": "/docs/programming/vim",
    "text": "Vim vim is a very nice and beautiful text editor. I just have to learn a bit of its intricacies.  Navigation  Screen Navigation | Key bindings | Descriptions | | : | : | | zz | center this line | | zt | top this line | | zb | bottom this line | | H M L | move to top, middle, or bottom of the screen |  File Navigation | Key bindings | Descriptions | | : | : | | :tabedit file | edit file in a new tab | | :tabfind file | open file if exists in new tab | | :tabclose | close current tab | | :tabs | lists all tabs | | :tabfirst | go to first tab | | :tablast | go to last tab | | :tabn | go to next tab | | :tabp | go to previous |  Searching | Key bindings | Descriptions | | : | : | | /{pattern} | search | | n | next matching search pattern | | N | previous match | |  | next exact word under cursor | |  | previous exact word under cursor |  Modifying Text | Key bindings | Descriptions | | : | : | | a | append | | A | append from end of line | | i | insert | | o | insert to next line | | O | insert to previous line | | s | delete char and insert | | S | delete line and insert | | C | delete until end of line and insert | | r | replace one character | | R | enter replace mode | | u | undo changes | | Ctrl + R | redo changes |  Editing Text | Key bindings         | Descriptions                               |     | | : | : |  | | x                  | delete character                           |     | | dd                 | cut                                        |     | | yy                 | copy                                       |     | | p                  | paste                                      |     | | P                  | paste before                               |     | | \"  p              | paste from clipboard                       |     | | \"  y              | paste to clipboard                         |     | | :%/foo/bar/g       | replace foo with bar in whole document |     | |                   | indent right                               |     | | <                  | indent left                                |     | | =                  | autoindent                                 |     | | g~ / guu / gUU | swap case / uppercase / lowercase          |     |"
  },
  {
    "title": "Meta Heading",
    "url": "/docs/writing/design",
    "text": "Meta Heading js file=\"layout.js <meta name=\"applemobilewebapptitle\" content=\"knznsmn\" /"
  },
  {
    "title": "Illustrator",
    "url": "/docs/writing/illustrator",
    "text": "Illustrator"
  },
  {
    "title": "Markdown Tags",
    "url": "/docs/writing/markdown-tags",
    "text": "Markdown Tags  Marking up contents  Footnote md Friend is just an enemy, who hasn't attack yet.^1 ^1: Skipper, Penguins of Madagascar"
  },
  {
    "title": "Photoshop",
    "url": "/docs/writing/photoshop",
    "text": "Photoshop"
  },
  {
    "title": "Resources",
    "url": "/docs/writing/resources",
    "text": "Resources"
  },
  {
    "title": "Hello, World!",
    "url": "/blog/2021-02-27-hello-world",
    "text": "This is the first blog post. < truncate  ...consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"
  },
  {
    "title": "Deuxieme Cerveau",
    "url": "/blog/2021-05-29-deuxieme-cerveau",
    "text": "This is my second brain. < truncate  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"
  },
  {
    "title": "Liking Markdown",
    "url": "/blog/2021-08-01-mdx-blog-post",
    "text": ":::note Use the power of React to create interactive blog posts. ::: {/ truncate /}"
  },
  {
    "title": "Welcome",
    "url": "/blog/index",
    "text": "Need to fix this later. < truncate"
  },
  {
    "title": "HTML Inputs",
    "url": "/blog/2025-03-25-html-inputs",
    "text": "HTML have several input tags for different use cases. Here are some commonly used tags and their examples in one place. {/ truncate /}  Input Types How input works varies considerably depending on the value of its type attribute."
  }
]